{"ast":null,"code":"var _jsxFileName = \"H:\\\\Plant Disease - Copy\\\\frontend\\\\src\\\\pages\\\\ImageUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ImageUpload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageUpload() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [diagnosisHistory, setDiagnosisHistory] = useState([]);\n\n  // Fetch diagnosis history when component mounts\n  useEffect(() => {\n    const fetchDiagnosisHistory = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://localhost:5000/diagnosis-history', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        setDiagnosisHistory(response.data);\n      } catch (error) {\n        console.error('Error fetching diagnosis history:', error);\n      }\n    };\n    fetchDiagnosisHistory();\n  }, []);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('image', file);\n    setLoading(true);\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.post('http://localhost:5000/api/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      // Sort the results by confidence scores in ascending order\n      const sortedResults = response.data.diagnosis;\n      setResults(sortedResults);\n\n      // Refetch diagnosis history to include the new diagnosis\n      // const historyResponse = await axios.get('http://localhost:5000/diagnosis-history', {\n      //     headers: { \n      //         'Authorization': `Bearer ${token}` \n      //     }\n      // });\n      // setDiagnosisHistory(historyResponse.data);\n    } catch (error) {\n      console.error('Error:', error);\n      setResults([{\n        label: 'Error processing image',\n        score: 0\n      }]);\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Plant Disease Detection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-container\",\n      children: results.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: result.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Confidence: \", (result.score * 100).toFixed(2), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n_s(ImageUpload, \"+CdhZPkujebDrIM7BLjhetlV8lM=\");\n_c = ImageUpload;\nexport default ImageUpload;\nvar _c;\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ImageUpload","_s","file","setFile","results","setResults","loading","setLoading","diagnosisHistory","setDiagnosisHistory","fetchDiagnosisHistory","token","localStorage","getItem","response","get","headers","data","error","console","handleFileChange","e","target","files","handleSubmit","preventDefault","formData","FormData","append","post","sortedResults","diagnosis","label","score","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","disabled","map","result","index","toFixed","_c","$RefreshReg$"],"sources":["H:/Plant Disease - Copy/frontend/src/pages/ImageUpload.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './ImageUpload.css';\r\n\r\nfunction ImageUpload() {\r\n    const [file, setFile] = useState(null);\r\n    const [results, setResults] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [diagnosisHistory, setDiagnosisHistory] = useState([]);\r\n\r\n    // Fetch diagnosis history when component mounts\r\n    useEffect(() => {\r\n        const fetchDiagnosisHistory = async () => {\r\n            try {\r\n                const token = localStorage.getItem('token');\r\n                const response = await axios.get('http://localhost:5000/diagnosis-history', {\r\n                    headers: { \r\n                        'Authorization': `Bearer ${token}` \r\n                    }\r\n                });\r\n                setDiagnosisHistory(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching diagnosis history:', error);\r\n            }\r\n        };\r\n\r\n        fetchDiagnosisHistory();\r\n    }, []);\r\n\r\n    const handleFileChange = (e) => {\r\n        setFile(e.target.files[0]);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!file) return;\r\n\r\n        const formData = new FormData();\r\n        formData.append('image', file);\r\n\r\n        setLoading(true);\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const response = await axios.post('http://localhost:5000/api/upload', formData, {\r\n                headers: { \r\n                    'Content-Type': 'multipart/form-data',\r\n                    'Authorization': `Bearer ${token}`\r\n                },\r\n            });\r\n\r\n            // Sort the results by confidence scores in ascending order\r\n            const sortedResults = response.data.diagnosis;\r\n            setResults(sortedResults);\r\n\r\n            // Refetch diagnosis history to include the new diagnosis\r\n            // const historyResponse = await axios.get('http://localhost:5000/diagnosis-history', {\r\n            //     headers: { \r\n            //         'Authorization': `Bearer ${token}` \r\n            //     }\r\n            // });\r\n            // setDiagnosisHistory(historyResponse.data);\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            setResults([{ label: 'Error processing image', score: 0 }]);\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"upload-container\">\r\n            <h2>Plant Disease Detection</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <input type=\"file\" onChange={handleFileChange} />\r\n                <button type=\"submit\" disabled={loading}>Upload</button>\r\n            </form>\r\n            {loading && <p>Loading...</p>}\r\n            <div className=\"results-container\">\r\n                {results.map((result, index) => (\r\n                    <div key={index} className=\"result-box\">\r\n                        <h3>{result.label}</h3>\r\n                        <p>Confidence: {(result.score * 100).toFixed(2)}%</p>                       \r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {/* <div className=\"diagnosis-history\">\r\n                <h3>Diagnosis History</h3>\r\n                {diagnosisHistory.map((record, index) => (\r\n                    <div key={index} className=\"history-item\">\r\n                        <img \r\n                            src={`http://localhost:5000/${record.imagePath}`} \r\n                            alt={`Diagnosis ${index + 1}`} \r\n                            style={{ maxWidth: '200px', maxHeight: '200px' }} \r\n                        />\r\n                        <div className=\"history-details\">\r\n                            {record.diagnosis.map((result, diagnosisIndex) => (\r\n                                <div key={diagnosisIndex}>\r\n                                    <p>{result.label}: {(result.score * 100).toFixed(2)}%</p>\r\n                                </div>\r\n                            ))}\r\n                            <p>Date: {new Date(record.createdAt).toLocaleString()}</p>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageUpload;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}