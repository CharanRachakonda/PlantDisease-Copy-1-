{"ast":null,"code":"var _jsxFileName = \"H:\\\\Plant Disease - Copy\\\\frontend\\\\src\\\\pages\\\\ImageUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './ImageUpload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageUpload() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile && !['image/jpeg', 'image/png'].includes(selectedFile.type)) {\n      alert('Only JPEG or PNG images are allowed!');\n      setFile(null);\n      return;\n    }\n    setFile(selectedFile);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('image', file);\n    setLoading(true);\n    try {\n      console.log(\"Sending file to backend:\", file.name);\n      const response = await axios.post('http://localhost:5000/api/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log(\"Received response:\", response.data);\n\n      // Sort the results by confidence scores in descending order\n      const sortedResults = response.data.diagnosis.sort((a, b) => b.score - a.score).slice(0, 5);\n      setResults(sortedResults);\n    } catch (error) {\n      console.error('Error processing image:', error);\n      if (error.response && error.response.data.message) {\n        setResults([{\n          label: error.response.data.message,\n          score: 0\n        }]);\n      } else {\n        setResults([{\n          label: 'Unexpected error occurred',\n          score: 0\n        }]);\n      }\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Plant Disease Detection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading || !file,\n        children: loading ? \"Processing...\" : \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-container\",\n      children: results.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: result.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Confidence: \", (result.score * 100).toFixed(2), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(ImageUpload, \"5aCYOAV6WoEBKvX0pVsxzynPL3M=\");\n_c = ImageUpload;\nexport default ImageUpload;\nvar _c;\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ImageUpload","_s","file","setFile","results","setResults","loading","setLoading","handleFileChange","e","selectedFile","target","files","includes","type","alert","handleSubmit","preventDefault","formData","FormData","append","console","log","name","response","post","headers","data","sortedResults","diagnosis","sort","a","b","score","slice","error","message","label","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","disabled","map","result","index","toFixed","_c","$RefreshReg$"],"sources":["H:/Plant Disease - Copy/frontend/src/pages/ImageUpload.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './ImageUpload.css';\r\n\r\nfunction ImageUpload() {\r\n    const [file, setFile] = useState(null);\r\n    const [results, setResults] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleFileChange = (e) => {\r\n        const selectedFile = e.target.files[0];\r\n        if (selectedFile && !['image/jpeg', 'image/png'].includes(selectedFile.type)) {\r\n            alert('Only JPEG or PNG images are allowed!');\r\n            setFile(null);\r\n            return;\r\n        }\r\n        setFile(selectedFile);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!file) return;\r\n\r\n        const formData = new FormData();\r\n        formData.append('image', file);\r\n\r\n        setLoading(true);\r\n        try {\r\n            console.log(\"Sending file to backend:\", file.name);\r\n            const response = await axios.post('http://localhost:5000/api/upload', formData, {\r\n                headers: { 'Content-Type': 'multipart/form-data' },\r\n            });\r\n            console.log(\"Received response:\", response.data);\r\n\r\n            // Sort the results by confidence scores in descending order\r\n            const sortedResults = response.data.diagnosis\r\n                .sort((a, b) => b.score - a.score)\r\n                .slice(0, 5);\r\n            setResults(sortedResults);\r\n        } catch (error) {\r\n            console.error('Error processing image:', error);\r\n            if (error.response && error.response.data.message) {\r\n                setResults([{ label: error.response.data.message, score: 0 }]);\r\n            } else {\r\n                setResults([{ label: 'Unexpected error occurred', score: 0 }]);\r\n            }\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"upload-container\">\r\n            <h2>Plant Disease Detection</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <input type=\"file\" onChange={handleFileChange} />\r\n                <button type=\"submit\" disabled={loading || !file}>\r\n                    {loading ? \"Processing...\" : \"Upload\"}\r\n                </button>\r\n            </form>\r\n            {loading && <p>Loading...</p>}\r\n            <div className=\"results-container\">\r\n                {results.map((result, index) => (\r\n                    <div key={index} className=\"result-box\">\r\n                        <h3>{result.label}</h3>\r\n                        <p>Confidence: {(result.score * 100).toFixed(2)}%</p>                       \r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageUpload;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}