{"ast":null,"code":"var _jsxFileName = \"H:\\\\Plant Disease - Copy\\\\frontend\\\\src\\\\pages\\\\ImageUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ImageUpload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageUpload() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('image', file);\n    setLoading(true);\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.post('http://localhost:5000/api/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      // Sort the results by confidence scores in ascending order\n      const sortedResults = response.data.diagnosis;\n      setResults(sortedResults);\n    } catch (error) {\n      console.error('Error:', error);\n      setResults([{\n        label: 'Error processing image',\n        score: 0\n      }]);\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n      charSet: \"UTF-8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n      name: \"viewport\",\n      content: \"width=device-width, initial-scale=1.0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Plant Disease Detection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-container\",\n      children: results.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: result.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Confidence: \", (result.score * 100).toFixed(2), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(ImageUpload, \"5aCYOAV6WoEBKvX0pVsxzynPL3M=\");\n_c = ImageUpload;\nexport default ImageUpload;\nvar _c;\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ImageUpload","_s","file","setFile","results","setResults","loading","setLoading","handleFileChange","e","target","files","handleSubmit","preventDefault","formData","FormData","append","token","localStorage","getItem","response","post","headers","sortedResults","data","diagnosis","error","console","label","score","className","children","charSet","fileName","_jsxFileName","lineNumber","columnNumber","name","content","onSubmit","type","onChange","disabled","map","result","index","toFixed","_c","$RefreshReg$"],"sources":["H:/Plant Disease - Copy/frontend/src/pages/ImageUpload.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './ImageUpload.css';\r\n\r\nfunction ImageUpload() {\r\n    const [file, setFile] = useState(null);\r\n    const [results, setResults] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleFileChange = (e) => {\r\n        setFile(e.target.files[0]);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!file) return;\r\n\r\n        const formData = new FormData();\r\n        formData.append('image', file);\r\n\r\n        setLoading(true);\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const response = await axios.post('http://localhost:5000/api/upload', formData, {\r\n                headers: { \r\n                    'Content-Type': 'multipart/form-data',\r\n                    'Authorization': `Bearer ${token}`\r\n                },\r\n            });\r\n\r\n            // Sort the results by confidence scores in ascending order\r\n            const sortedResults = response.data.diagnosis;\r\n            setResults(sortedResults);\r\n\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            setResults([{ label: 'Error processing image', score: 0 }]);\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    return (\r\n        \r\n        <div className=\"upload-container\">\r\n            <meta charSet=\"UTF-8\" />\r\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n            <h2>Plant Disease Detection</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <input type=\"file\" onChange={handleFileChange} />\r\n                <button type=\"submit\" disabled={loading}>Upload</button>\r\n            </form>\r\n            {loading && <p>Loading...</p>}\r\n            <div className=\"results-container\">\r\n                {results.map((result, index) => (\r\n                    <div key={index} className=\"result-box\">\r\n                        <h3>{result.label}</h3>\r\n                        <p>Confidence: {(result.score * 100).toFixed(2)}%</p>                       \r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageUpload;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}