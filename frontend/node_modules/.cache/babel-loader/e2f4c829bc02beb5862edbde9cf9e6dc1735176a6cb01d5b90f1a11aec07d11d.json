{"ast":null,"code":"var _jsxFileName = \"H:\\\\Plant Disease - Copy\\\\frontend\\\\src\\\\pages\\\\HistoryPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HistoryPage = () => {\n  _s();\n  const [diagnosisHistory, setDiagnosisHistory] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchDiagnosisHistory = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://localhost:5000/diagnosis-history', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        setDiagnosisHistory(response.data);\n      } catch (error) {\n        console.error('Error fetching diagnosis history:', error);\n      }\n    };\n    fetchDiagnosisHistory();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"history-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Diagnosis History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), diagnosisHistory.map((record, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"history-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:5000/${record.imagePath}`,\n        alt: `Diagnosis ${index + 1}`,\n        style: {\n          maxWidth: '200px',\n          maxHeight: '200px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"history-details\",\n        children: [record.diagnosis.map((result, diagnosisIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [result.label, \": \", (result.score * 100).toFixed(2), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this)\n        }, diagnosisIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", new Date(record.createdAt).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(HistoryPage, \"CddcnWAGYTDiaCjVECAS4EV67Os=\", false, function () {\n  return [useNavigate];\n});\n_c = HistoryPage;\nexport default HistoryPage;\nvar _c;\n$RefreshReg$(_c, \"HistoryPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","HistoryPage","_s","diagnosisHistory","setDiagnosisHistory","navigate","fetchDiagnosisHistory","token","localStorage","getItem","response","get","headers","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","record","index","src","imagePath","alt","style","maxWidth","maxHeight","diagnosis","result","diagnosisIndex","label","score","toFixed","Date","createdAt","toLocaleString","_c","$RefreshReg$"],"sources":["H:/Plant Disease - Copy/frontend/src/pages/HistoryPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst HistoryPage = () => {\r\n  const [diagnosisHistory, setDiagnosisHistory] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchDiagnosisHistory = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.get('http://localhost:5000/diagnosis-history', {\r\n          headers: { \r\n            'Authorization': `Bearer ${token}` \r\n          }\r\n        });\r\n        setDiagnosisHistory(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching diagnosis history:', error);\r\n      }\r\n    };\r\n\r\n    fetchDiagnosisHistory();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"history-container\">\r\n      <h2>Diagnosis History</h2>\r\n      {diagnosisHistory.map((record, index) => (\r\n        <div key={index} className=\"history-item\">\r\n            \r\n          <img \r\n            src={`http://localhost:5000/${record.imagePath}`} \r\n            alt={`Diagnosis ${index + 1}`} \r\n            style={{ maxWidth: '200px', maxHeight: '200px' }} \r\n          />\r\n          <div className=\"history-details\">\r\n            {record.diagnosis.map((result, diagnosisIndex) => (\r\n              <div key={diagnosisIndex}>\r\n                <p>{result.label}: {(result.score * 100).toFixed(2)}%</p>\r\n              </div>\r\n            ))}\r\n            <p>Date: {new Date(record.createdAt).toLocaleString()}</p>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HistoryPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}